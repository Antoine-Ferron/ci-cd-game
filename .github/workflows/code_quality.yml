name: Code Quality Check

on:
  pull_request:
    branches: ["**"]
  push:
    branches: ["main"]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  cargo-quality:
    name: Vérification de la qualité du code Rust
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: simeis-main

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Installer Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt
          override: true

      - name: Vérifier la compilation
        run: cargo check

      - name: Vérifier le formatage
        run: cargo fmt --check

      - name: Installer cargo-tarpaulin pour la couverture
        run: cargo install cargo-tarpaulin

      - name: Vérifier la couverture avec cargo-tarpaulin (JSON)
        run: cargo tarpaulin --out Json

      - name: Extraire la couverture
        id: coverage
        run: |
          rate=$(jq '.coverage' tarpaulin-report.json)
          echo "rate=$rate" >> $GITHUB_OUTPUT

      - name: Créer une issue si couverture faible
        if: ${{ steps.coverage.outputs.rate < 0.50 }}
        id: create_issue
        run: |
          gh issue create \
            --title "Faible couverture de tests (${GITHUB_SHA::7})" \
            --body "Le commit $GITHUB_SHA a une couverture de tests de seulement ${{ steps.coverage.outputs.rate }}." \
            --label "not enough tests"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trouver la PR associée (si elle existe)
        id: find_pr
        run: |
          BRANCH_NAME="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          pr_number=$(gh pr list --head "$BRANCH_NAME" --state open --json number -q '.[0].number')
          echo "pr_number=$pr_number" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Créer un label selon le résultat
        if: ${{ steps.coverage.outputs.rate < 0.50 && steps.find_pr.outputs.pr_number != '' }}
        run: |
          gh pr edit "${{ steps.find_pr.outputs.pr_number }}" --add-label "not enough tests"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Pas besoin de label
        if: ${{ steps.coverage.outputs.rate >= 0.50 }}
        run: echo "Coverage ${{ steps.coverage.outputs.rate }} is sufficient, no label added."